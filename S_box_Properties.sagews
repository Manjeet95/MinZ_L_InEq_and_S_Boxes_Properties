from sage.crypto.sbox import SBox
s_boxes = [((0xC,0xF,0x7,0xA,0xE,0xD,0xB,0x0,0x2,0x6,0x3,0x1,0x9,0x4,0x5,0x8),), ((0x7,0x2,0xE,0x9,0x3,0xB,0x0,0x4,0xC,0xD,0x1,0xA,0x6,0xF,0x8,0x5),), ((0xC,0x5,0x6,0xB,0x9,0x0,0xA,0xD,0x3,0xE,0xF,0x8,0x4,0x7,0x1,0x2),), ((0x5,0xE,0xF,0x8,0xC,0x1,0x2,0xD,0xB,0x4,0x6,0x3,0x0,0x7,0x9,0xA),), ((0x9,0x0,0x4,0xB,0xD,0xC,0x3,0xF,0x1,0xA,0x2,0x6,0x7,0x5,0x8,0xE),), ((0x3,0xC,0x6,0xD,0x5,0x7,0x1,0x9,0xF,0x2,0x0,0x4,0xB,0xA,0xE,0x8),), ((0xD,0x7,0x3,0x2,0x9,0xA,0xC,0x1,0xF,0x4,0x5,0xE,0x6,0x0,0xB,0x8),), ((0x4,0xA,0xF,0xC,0x0,0xD,0x9,0xB,0xE,0x6,0x1,0x7,0x3,0x5,0x8,0x2),), ((0xD,0xE,0x0,0x1,0x5,0xA,0x7,0x6,0xB,0x3,0x9,0xC,0xF,0x8,0x2,0x4),), ((0x7,0xA,0x2,0xC,0x4,0x8,0xF,0x0,0x5,0x9,0x1,0xE,0x3,0xD,0xB,0x6),), ((0xC,0xA,0xD,0x3,0xE,0xB,0xF,0x7,0x8,0x9,0x1,0x5,0x0,0x2,0x4,0x6),), ((0x8,0x6,0x7,0x9,0x3,0xC,0xA,0xF,0xD,0x1,0xE,0x4,0x0,0xB,0x5,0x2),), ((0x3,0x8,0xF,0x1,0xA,0x6,0x5,0xB,0xE,0xD,0x4,0x2,0x7,0x0,0x9,0xC),), ((0xF,0xC,0x2,0x7,0x9,0x0,0x5,0xA,0x1,0xB,0xE,0x8,0x6,0xD,0x3,0x4),), ((0x8,0x6,0x7,0x9,0x3,0xC,0xA,0xF,0xD,0x1,0xE,0x4,0x0,0xB,0x5,0x2),),((0x0, 0xF, 0xB, 0x8, 0xC, 0x9, 0x6, 0x3, 0xD, 0x1, 0x2, 0x4, 0xA, 0x7, 0x5, 0xE),), ((0x1, 0xF, 0x8, 0x3, 0xC, 0x0, 0xB, 0x6, 0x2, 0x5, 0x4, 0xA, 0x9, 0xE, 0x7, 0xD),),((0xF, 0x5, 0x2, 0xB, 0x4, 0xA, 0x9, 0xC, 0x0, 0x3, 0xE, 0x8, 0xD, 0x6, 0x7, 0x1),)];


s_box = SBox(s_boxes[0][0])
print("boomerang_uniformity: " + str(s_box.boomerang_uniformity()))
#print(s_box.difference_distribution_table())
print("fixed_points: " + str(s_box.fixed_points()))
print("has_linear_structure: " + str(s_box.has_linear_structure()))
print("is_almost_bent: " + str(s_box.is_almost_bent()))
print("is_apn: " + str(s_box.is_apn()))
print("differential_uniformity: " + str(s_box.differential_uniformity()))
print("maximal_difference_probability: " + str(s_box.maximal_difference_probability()))
print("maximal_difference_probability_absolute: " + str(s_box.maximal_difference_probability_absolute()))
print("maximal_linear_bias_absolute: " + str(s_box.maximal_linear_bias_absolute()))
print("maximal_linear_bias_relative: " + str(s_box.maximal_linear_bias_relative()))
print("is_balanced: " + str(s_box.is_balanced()))
print("is_involution: " + str(s_box.is_involution()))
print("is_permutation: " + str(s_box.is_permutation()))
print("linear_branch_number: " + str(s_box.linear_branch_number()))
print("differential_branch_number: " + str(s_box.differential_branch_number()))
print("min_degree: " + str(s_box.min_degree()))
print("max_degree: " + str(s_box.max_degree()))
print("linearity: " + str(s_box.linearity()))
print("nonlinearity: " + str(s_box.nonlinearity()))


s_box = SBox(s_boxes[1][0])
print("boomerang_uniformity: " + str(s_box.boomerang_uniformity()))
#print(s_box.difference_distribution_table())
print("fixed_points: " + str(s_box.fixed_points()))
print("has_linear_structure: " + str(s_box.has_linear_structure()))
print("is_almost_bent: " + str(s_box.is_almost_bent()))
print("is_apn: " + str(s_box.is_apn()))
print("differential_uniformity: " + str(s_box.differential_uniformity()))
print("maximal_difference_probability: " + str(s_box.maximal_difference_probability()))
print("maximal_difference_probability_absolute: " + str(s_box.maximal_difference_probability_absolute()))
print("maximal_linear_bias_absolute: " + str(s_box.maximal_linear_bias_absolute()))
print("maximal_linear_bias_relative: " + str(s_box.maximal_linear_bias_relative()))
print("is_balanced: " + str(s_box.is_balanced()))
print("is_involution: " + str(s_box.is_involution()))
print("is_permutation: " + str(s_box.is_permutation()))
print("linear_branch_number: " + str(s_box.linear_branch_number()))
print("differential_branch_number: " + str(s_box.differential_branch_number()))
print("min_degree: " + str(s_box.min_degree()))
print("max_degree: " + str(s_box.max_degree()))
print("linearity: " + str(s_box.linearity()))
print("nonlinearity: " + str(s_box.nonlinearity()))


s_box = SBox(s_boxes[2][0])
print("boomerang_uniformity: " + str(s_box.boomerang_uniformity()))
#print(s_box.difference_distribution_table())
print("fixed_points: " + str(s_box.fixed_points()))
print("has_linear_structure: " + str(s_box.has_linear_structure()))
print("is_almost_bent: " + str(s_box.is_almost_bent()))
print("is_apn: " + str(s_box.is_apn()))
print("differential_uniformity: " + str(s_box.differential_uniformity()))
print("maximal_difference_probability: " + str(s_box.maximal_difference_probability()))
print("maximal_difference_probability_absolute: " + str(s_box.maximal_difference_probability_absolute()))
print("maximal_linear_bias_absolute: " + str(s_box.maximal_linear_bias_absolute()))
print("maximal_linear_bias_relative: " + str(s_box.maximal_linear_bias_relative()))
print("is_balanced: " + str(s_box.is_balanced()))
print("is_involution: " + str(s_box.is_involution()))
print("is_permutation: " + str(s_box.is_permutation()))
print("linear_branch_number: " + str(s_box.linear_branch_number()))
print("differential_branch_number: " + str(s_box.differential_branch_number()))
print("min_degree: " + str(s_box.min_degree()))
print("max_degree: " + str(s_box.max_degree()))
print("linearity: " + str(s_box.linearity()))
print("nonlinearity: " + str(s_box.nonlinearity()))


s_box = SBox(s_boxes[3][0])
print("boomerang_uniformity: " + str(s_box.boomerang_uniformity()))
#print(s_box.difference_distribution_table())
print("fixed_points: " + str(s_box.fixed_points()))
print("has_linear_structure: " + str(s_box.has_linear_structure()))
print("is_almost_bent: " + str(s_box.is_almost_bent()))
print("is_apn: " + str(s_box.is_apn()))
print("differential_uniformity: " + str(s_box.differential_uniformity()))
print("maximal_difference_probability: " + str(s_box.maximal_difference_probability()))
print("maximal_difference_probability_absolute: " + str(s_box.maximal_difference_probability_absolute()))
print("maximal_linear_bias_absolute: " + str(s_box.maximal_linear_bias_absolute()))
print("maximal_linear_bias_relative: " + str(s_box.maximal_linear_bias_relative()))
print("is_balanced: " + str(s_box.is_balanced()))
print("is_involution: " + str(s_box.is_involution()))
print("is_permutation: " + str(s_box.is_permutation()))
print("linear_branch_number: " + str(s_box.linear_branch_number()))
print("differential_branch_number: " + str(s_box.differential_branch_number()))
print("min_degree: " + str(s_box.min_degree()))
print("max_degree: " + str(s_box.max_degree()))
print("linearity: " + str(s_box.linearity()))
print("nonlinearity: " + str(s_box.nonlinearity()))







